THEORY ProofList IS
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_cancel_ticket.2,(_f(112) & _f(124) & _f(109) & _f(104) => _f(114));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_cancel_ticket.1,(_f(112) & _f(124) & _f(109) & _f(104) => _f(110));
_f(1) & _f(2) & _f(22) & _f(71) & WellDefinedness_realocate_passenger.2,(_f(66) & _f(38) & _f(72) & _f(104) => _f(123));
_f(1) & _f(2) & _f(22) & _f(71) & WellDefinedness_realocate_passenger.1,(_f(66) & _f(38) & _f(72) & _f(104) => _f(109));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_realocate_passenger.2,(_f(113) & _f(112) & _f(111) & _f(104) => _f(114));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_realocate_passenger.1,(_f(113) & _f(112) & _f(111) & _f(104) => _f(110));
_f(1) & _f(2) & _f(22) & _f(64) & WellDefinedness_realocate.3,(_f(65) & _f(66) & _f(38) & _f(67) & _f(40) & _f(104) => _f(122));
_f(1) & _f(2) & _f(22) & _f(64) & WellDefinedness_realocate.2,(_f(65) & _f(66) & _f(38) & _f(67) & _f(40) & _f(104) => _f(106));
_f(1) & _f(2) & _f(22) & _f(64) & WellDefinedness_realocate.1,(_f(65) & _f(66) & _f(38) & _f(104) => _f(107));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_realocate.4,(_f(27) & _f(100) & _f(118) & _f(121) & _f(120) & _f(66) & _f(38) & _f(67) & _f(40) & _f(104) => _f(122));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_realocate.3,(_f(27) & _f(100) & _f(118) & _f(121) & _f(120) & _f(66) & _f(38) & _f(67) & _f(40) & _f(104) => _f(106));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_realocate.2,(_f(27) & _f(100) & _f(118) & _f(121) & _f(120) & _f(66) & _f(38) & _f(104) => _f(107));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_realocate.1,(_f(27) & _f(100) & _f(118) & _f(104) => _f(107));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_boarding.1,(_f(103) & _f(113) & _f(36) & _f(112) & _f(111) & _f(110) & _f(109) & _f(104) => _f(114));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_check_in.1,(_f(103) & _f(113) & _f(36) & _f(112) & _f(111) & _f(110) & _f(109) & _f(104) => _f(114));
_f(1) & _f(2) & _f(22) & _f(35) & WellDefinedness_buy_ticket.3,(_f(38) & _f(39) & _f(40) & _f(104) => _f(106));
_f(1) & _f(2) & _f(22) & _f(35) & WellDefinedness_buy_ticket.2,(_f(38) & _f(39) & _f(40) & _f(104) => _f(105));
_f(1) & _f(2) & _f(22) & _f(35) & WellDefinedness_buy_ticket.1,(_f(38) & _f(104) => _f(107));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_buy_ticket.2,(_f(103) & _f(97) & _f(99) & _f(102) & _f(66) & _f(101) & _f(40) & _f(104) => _f(106));
_f(1) & _f(2) & _f(22) & WellDefinedness_Precondition_buy_ticket.1,(_f(103) & _f(97) & _f(99) & _f(102) & _f(66) & _f(101) & _f(40) & _f(104) => _f(105));
_f(1) & _f(2) & _f(22) & _f(76) & cancel_ticket.6,(_f(3) & _f(47) => _f(82));
_f(1) & _f(2) & _f(22) & _f(76) & cancel_ticket.5,(_f(3) & _f(18) => _f(81));
_f(1) & _f(2) & _f(22) & _f(76) & cancel_ticket.4,(_f(3) & _f(16) => _f(80));
_f(1) & _f(2) & _f(22) & _f(76) & cancel_ticket.3,(_f(3) & _f(14) => _f(79));
_f(1) & _f(2) & _f(22) & _f(76) & cancel_ticket.2,(_f(3) & _f(10) => _f(78));
_f(1) & _f(2) & _f(22) & _f(76) & cancel_ticket.1,(_f(3) & _f(8) => _f(77));
_f(1) & _f(2) & _f(22) & _f(71) & realocate_passenger.2,(_f(66) & _f(38) & _f(72) & _f(73) & _f(3) & _f(47) => _f(75));
_f(1) & _f(2) & _f(22) & _f(71) & realocate_passenger.1,(_f(66) & _f(38) & _f(72) & _f(73) & _f(3) & _f(14) => _f(74));
_f(1) & _f(2) & _f(22) & _f(64) & realocate.2,(_f(65) & _f(66) & _f(38) & _f(67) & _f(40) & _f(68) & _f(3) & _f(47) => _f(70));
_f(1) & _f(2) & _f(22) & _f(64) & realocate.1,(_f(65) & _f(66) & _f(38) & _f(67) & _f(40) & _f(68) & _f(3) & _f(14) => _f(69));
_f(1) & _f(2) & _f(22) & _f(55) & plane_departure.8,(_f(3) & _f(47) => _f(63));
_f(1) & _f(2) & _f(22) & _f(55) & plane_departure.7,(_f(3) & _f(18) => _f(62));
_f(1) & _f(2) & _f(22) & _f(55) & plane_departure.6,(_f(3) & _f(16) => _f(61));
_f(1) & _f(2) & _f(22) & _f(55) & plane_departure.5,(_f(3) & _f(14) => _f(60));
_f(1) & _f(2) & _f(22) & _f(55) & plane_departure.4,(_f(3) & _f(12) => _f(59));
_f(1) & _f(2) & _f(22) & _f(55) & plane_departure.3,(_f(3) & _f(10) => _f(58));
_f(1) & _f(2) & _f(22) & _f(55) & plane_departure.2,(_f(3) & _f(8) => _f(57));
_f(1) & _f(2) & _f(22) & _f(55) & plane_departure.1,(_f(3) & _f(4) => _f(56));
_f(1) & _f(2) & _f(22) & _f(52) & boarding.2,(_f(3) & _f(47) => _f(54));
_f(1) & _f(2) & _f(22) & _f(52) & boarding.1,(_f(3) & _f(16) => _f(53));
_f(1) & _f(2) & _f(22) & _f(49) & check_in.2,(_f(3) & _f(47) => _f(51));
_f(1) & _f(2) & _f(22) & _f(49) & check_in.1,(_f(3) & _f(16) => _f(50));
_f(1) & _f(2) & _f(22) & _f(35) & buy_ticket.6,(_f(38) & _f(39) & _f(40) & _f(41) & _f(36) & _f(37) & _f(3) & _f(47) => _f(48));
_f(1) & _f(2) & _f(22) & _f(35) & buy_ticket.5,(_f(38) & _f(39) & _f(40) & _f(41) & _f(36) & _f(37) & _f(3) & _f(18) => _f(46));
_f(1) & _f(2) & _f(22) & _f(35) & buy_ticket.4,(_f(38) & _f(39) & _f(40) & _f(41) & _f(36) & _f(37) & _f(3) & _f(16) => _f(45));
_f(1) & _f(2) & _f(22) & _f(35) & buy_ticket.3,(_f(38) & _f(39) & _f(40) & _f(41) & _f(36) & _f(37) & _f(3) & _f(14) => _f(44));
_f(1) & _f(2) & _f(22) & _f(35) & buy_ticket.2,(_f(38) & _f(39) & _f(40) & _f(41) & _f(36) & _f(37) & _f(3) & _f(10) => _f(43));
_f(1) & _f(2) & _f(22) & _f(35) & buy_ticket.1,(_f(38) & _f(39) & _f(40) & _f(41) & _f(36) & _f(37) & _f(3) & _f(8) => _f(42));
_f(1) & _f(2) & _f(22) & _f(33) & plane_destination_flight.1,(_f(3) & _f(12) => _f(34));
_f(1) & _f(2) & _f(22) & _f(26) & plane_arrival.5,(_f(27) & _f(3) & _f(20) => _f(32));
_f(1) & _f(2) & _f(22) & _f(26) & plane_arrival.4,(_f(27) & _f(3) & _f(20) => _f(31));
_f(1) & _f(2) & _f(22) & _f(26) & plane_arrival.3,(_f(27) & _f(3) & _f(14) => _f(30));
_f(1) & _f(2) & _f(22) & _f(26) & plane_arrival.2,(_f(27) & _f(3) & _f(12) => _f(29));
_f(1) & _f(2) & _f(22) & _f(26) & plane_arrival.1,(_f(27) & _f(3) & _f(4) => _f(28));
_f(1) & _f(2) & _f(22) & _f(23) & new_connection.2,(_f(3) & _f(12) => _f(25));
_f(1) & _f(2) & _f(22) & _f(23) & new_connection.1,(_f(3) & _f(6) => _f(24));
_f(1) & _f(2) & Initialisation.9,(_f(3) & _f(20) => _f(21));
_f(1) & _f(2) & Initialisation.8,(_f(3) & _f(18) => _f(19));
_f(1) & _f(2) & Initialisation.7,(_f(3) & _f(16) => _f(17));
_f(1) & _f(2) & Initialisation.6,(_f(3) & _f(14) => _f(15));
_f(1) & _f(2) & Initialisation.5,(_f(3) & _f(12) => _f(13));
_f(1) & _f(2) & Initialisation.4,(_f(3) & _f(10) => _f(11));
_f(1) & _f(2) & Initialisation.3,(_f(3) & _f(8) => _f(9));
_f(1) & _f(2) & Initialisation.2,(_f(3) & _f(6) => _f(7));
_f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
DESTINATION: FIN(INTEGER) & not(DESTINATION = {}) & PLANE: FIN(INTEGER) & not(PLANE = {}) & PERSON: FIN(INTEGER) & not(PERSON = {}) & TICKET: FIN(INTEGER) & not(TICKET = {}) & ((1..3)*{TICKET_STATUS}): FIN(NATURAL*{TICKET_STATUS}) & not(((1..3)*{TICKET_STATUS}) = {});
"Invariant is preserved";
"Check invariant planes : POW( PLANE)";
{} : POW( PLANE);
"Check invariant connections : POW( DESTINATION)";
{} : POW( DESTINATION);
"Check invariant passengers : POW( PERSON)";
{} : POW( PERSON);
"Check invariant tickets : POW( TICKET)";
{} : POW( TICKET);
"Check invariant ((flights) : (((planes) +-> (connections))))";
(({}) : ((({}) +-> ({}))));
"Check invariant ((ticket_to) : (((tickets) --> (planes))))";
(({}) : ((({}) --> ({}))));
"Check invariant ((tickets_status) : (((tickets) --> (TICKET_STATUS))))";
(({}) : ((({}) --> (((1..3)*{TICKET_STATUS})))));
"Check invariant ((has_ticket) : (((passengers) <-> (tickets))))";
(({}) : ((({}) <-> ({}))));
"Check invariant ((capacities) : (((planes) --> ((NAT-{0})))))";
(({}) : ((({}) --> ((NAT-{0})))));
planes : POW( PLANE) & connections : POW( DESTINATION) & passengers : POW( PERSON) & tickets : POW( TICKET) & ((flights) : (((planes) +-> (connections)))) & ticket_to : tickets +-> planes & dom(ticket_to) = tickets & ((ticket_to) : (((tickets) --> (planes)))) & tickets_status : tickets +-> ((1..3)*{TICKET_STATUS}) & dom(tickets_status) = tickets & ((tickets_status) : (((tickets) --> (((1..3)*{TICKET_STATUS}))))) & ((has_ticket) : (((passengers) <-> (tickets)))) & ((dom(ticket_to)) = (dom(tickets_status))) & capacities : planes +-> (NAT-{0}) & dom(capacities) = planes & ((capacities) : (((planes) --> ((NAT-{0})))));
((dd) : (DESTINATION)) & not(dd : connections);
((connections) \/ (({dd}))) : POW( DESTINATION);
((flights) : (((planes) +-> (((connections) \/ (({dd})))))));
((pp) : (PLANE)) & not(pp : planes) & not(pp : dom(capacities));
((pp) : (PLANE));
((planes) \/ (({pp}))) : POW( PLANE);
((flights) : (((((planes) \/ (({pp})))) +-> (connections))));
((ticket_to) : (((tickets) --> (((planes) \/ (({pp})))))));
((((capacities) \/ (({((pp) |-> (2))})))) : (((((planes) \/ (({pp})))) --> ((NAT-{0})))));
((((capacities) \/ (({((pp) |-> (4))})))) : (((((planes) \/ (({pp})))) --> ((NAT-{0})))));
((pp) : (PLANE)) & ((pp) : (planes)) & ((dd) : (DESTINATION)) & ((dd) : (connections)) & not(pp : dom(flights));
((((flights) \/ (({((pp) |-> (dd))})))) : (((planes) +-> (connections))));
((pp) : (PERSON)) & ((dd) : (DESTINATION)) & ((dd) : (connections)) & (((((((has_ticket) ; (ticket_to)) )[({pp})]) /\ (((flights)~ )[({dd})]))) = ({})) & #(xx).(((xx) : (planes)) & ((xx) : (((flights)~ )[({dd})])) & ((xx) : (dom(capacities))) & (card(((ticket_to)~ )[({xx})]) +1 <= (capacities )(xx)));
((tt) : (TICKET));
not(tt : tickets);
((xx) : (dom(flights)));
(((flights )(xx)) = (dd));
((xx) : (dom(capacities)));
(card(((ticket_to)~ )[({xx})]) +1 <= (capacities )(xx));
((passengers) \/ (({pp}))) : POW( PERSON);
((tickets) \/ (({tt}))) : POW( TICKET);
((((ticket_to) \/ (({((tt) |-> (xx))})))) : (((((tickets) \/ (({tt})))) --> (planes))));
((((tickets_status) \/ (({((tt) |-> ((1|->TICKET_STATUS)))})))) : (((((tickets) \/ (({tt})))) --> (((1..3)*{TICKET_STATUS})))));
((((has_ticket) \/ (({((pp) |-> (tt))})))) : (((((passengers) \/ (({pp})))) <-> (((tickets) \/ (({tt})))))));
"Check invariant ((dom(ticket_to)) = (dom(tickets_status)))";
((dom(((ticket_to) \/ (({((tt) |-> (xx))}))))) = (dom(((tickets_status) \/ (({((tt) |-> ((1|->TICKET_STATUS)))}))))));
((pp) : (PERSON)) & ((pp) : (passengers)) & ((tt) : (TICKET)) & ((tt) : (tickets)) & ((((pp) |-> (tt))) : (has_ticket)) & ((tt) : (dom(tickets_status))) & ((tt) : (dom(ticket_to))) & (((tickets_status )(tt)) = ((1|->TICKET_STATUS))) & ((((({(2|->TICKET_STATUS)}\/{(3|->TICKET_STATUS)})) /\ ((((has_ticket) ; (tickets_status)) )[({pp})]))) = ({}));
((((tickets_status) <+ (({((tt) |-> ((2|->TICKET_STATUS)))})))) : (((tickets) --> (((1..3)*{TICKET_STATUS})))));
((dom(ticket_to)) = (dom(((tickets_status) <+ (({((tt) |-> ((2|->TICKET_STATUS)))}))))));
((pp) : (PERSON)) & ((pp) : (passengers)) & ((tt) : (TICKET)) & ((tt) : (tickets)) & ((((pp) |-> (tt))) : (has_ticket)) & ((tt) : (dom(tickets_status))) & ((tt) : (dom(ticket_to))) & (((tickets_status )(tt)) = ((2|->TICKET_STATUS)));
((((tickets_status) <+ (({((tt) |-> ((3|->TICKET_STATUS)))})))) : (((tickets) --> (((1..3)*{TICKET_STATUS})))));
((dom(ticket_to)) = (dom(((tickets_status) <+ (({((tt) |-> ((3|->TICKET_STATUS)))}))))));
((pp) : (PLANE)) & ((pp) : (planes)) & ((pp) : (dom(flights))) & ((((((((ticket_to)~) ; (tickets_status)) )[({pp})]) /\ (({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})))) = ({})) & ((pp) : (dom(capacities))) & ((pp) : (ran(ticket_to))) & ((({pp})) <<| (capacities)) : (planes - ({pp})) +-> (NAT-{0}) & dom(((({pp})) <<| (capacities))) = (planes - ({pp})) & ((((({pp})) <<| (capacities))) : ((((planes - ({pp}))) --> ((NAT-{0})))));
(planes - ({pp})) : POW( PLANE);
(((passengers - ((((ticket_to)~) ; ((has_ticket)~)) )[({pp})])) \/ (ran(((((({pp})) <<| ((ticket_to)~))) ; ((has_ticket)~))))) : POW( PERSON);
(tickets - ((ticket_to)~ )[({pp})]) : POW( TICKET);
((((({pp})) <<| (flights))) : ((((planes - ({pp}))) +-> (connections))));
((((ticket_to) |>> (({pp})))) : ((((tickets - ((ticket_to)~ )[({pp})])) --> ((planes - ({pp}))))));
((((((ticket_to)~ )[({pp})]) <<| (tickets_status))) : ((((tickets - ((ticket_to)~ )[({pp})])) --> (((1..3)*{TICKET_STATUS})))));
((((has_ticket) |>> (((ticket_to)~ )[({pp})]))) : ((((((passengers - ((((ticket_to)~) ; ((has_ticket)~)) )[({pp})])) \/ (ran(((((({pp})) <<| ((ticket_to)~))) ; ((has_ticket)~)))))) <-> ((tickets - ((ticket_to)~ )[({pp})])))));
((dom(((ticket_to) |>> (({pp}))))) = (dom(((((ticket_to)~ )[({pp})]) <<| (tickets_status)))));
((pp) : (PLANE)) & ((pp) : (planes)) & ((pp) : (dom(flights))) & (((flights )(pp)) : (ran(((({pp})) <<| (flights))))) & (((((1|->TICKET_STATUS)) : (((((ticket_to)~) ; (tickets_status)) )[({pp})]))) or ((((2|->TICKET_STATUS)) : (((((ticket_to)~) ; (tickets_status)) )[({pp})])))) & #(xx).(((xx) : (planes)) & ((xx) : (dom(flights))) & (((flights )(xx)) = ((flights )(pp))) & ((xx) : (dom(capacities))) & ((capacities )(xx) +1 <= card(((((((ticket_to)~ )[({pp})]) /\ (((tickets_status)~ )[({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})]))) \/ (((ticket_to)~ )[({xx})])))));
((xx) : (PLANE));
((xx) : (planes));
(((flights )(xx)) = ((flights )(pp)));
((capacities )(xx) +1 <= card(((((((ticket_to)~ )[({pp})]) /\ (((tickets_status)~ )[({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})]))) \/ (((ticket_to)~ )[({xx})]))));
((((((((((ticket_to)~ )[({pp})]) /\ (((tickets_status)~ )[({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})]))) <<| (ticket_to))) \/ ((((((ticket_to)~ )[({pp})]) /\ (((tickets_status)~ )[({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})])) * ({xx}))))) : (((tickets) --> (planes))));
((dom(((((((((ticket_to)~ )[({pp})]) /\ (((tickets_status)~ )[({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})]))) <<| (ticket_to))) \/ ((((((ticket_to)~ )[({pp})]) /\ (((tickets_status)~ )[({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})])) * ({xx})))))) = (dom(tickets_status)));
((pp) : (passengers)) & ((tt) : (tickets)) & ((((pp) |-> (tt))) : (has_ticket)) & not((tickets_status )(tt) = (3|->TICKET_STATUS));
(((flights )[({xx})]) = ((((ticket_to) ; (flights)) )[({tt})]));
not(((xx) = ((ticket_to )(tt))));
((((ticket_to) <+ (({((tt) |-> (xx))})))) : (((tickets) --> (planes))));
((dom(((ticket_to) <+ (({((tt) |-> (xx))}))))) = (dom(tickets_status)));
((tt) : (tickets)) & ((tt) : (ran(has_ticket))) & ((tt) : (dom(ticket_to))) & not((tickets_status )(tt) = (3|->TICKET_STATUS));
((passengers) /\ (dom(((has_ticket) |>> (({tt})))))) : POW( PERSON);
(tickets - ({tt})) : POW( TICKET);
((((({tt})) <<| (ticket_to))) : ((((tickets - ({tt}))) --> (planes))));
((((({tt})) <<| (tickets_status))) : ((((tickets - ({tt}))) --> (((1..3)*{TICKET_STATUS})))));
((((has_ticket) |>> (({tt})))) : (((((passengers) /\ (dom(((has_ticket) |>> (({tt}))))))) <-> ((tickets - ({tt}))))));
((dom(((({tt})) <<| (ticket_to)))) = (dom(((({tt})) <<| (tickets_status)))));
DESTINATION: FIN(INTEGER) & not(DESTINATION = {});
((dom(ticket_to)) = (dom(tickets_status)));
((has_ticket) : (((passengers) <-> (tickets))));
tickets_status : tickets +-> ((1..3)*{TICKET_STATUS});
dom(tickets_status) = tickets;
((tickets_status) : (((tickets) --> (((1..3)*{TICKET_STATUS})))));
ticket_to : tickets +-> planes;
dom(ticket_to) = tickets;
((ticket_to) : (((tickets) --> (planes))));
((flights) : (((planes) +-> (connections))));
tickets : POW( TICKET);
passengers : POW( PERSON);
connections : POW( DESTINATION);
planes : POW( PLANE);
((dd) : (DESTINATION));
not(pp : planes);
((dd) : (connections));
((pp) : (planes));
((xx) : (((flights)~ )[({dd})]));
(((((((has_ticket) ; (ticket_to)) )[({pp})]) /\ (((flights)~ )[({dd})]))) = ({}));
((pp) : (PERSON));
"Well definedness";
((((ticket_to)~ )[({xx})]) : (FIN(((ticket_to)~ )[({xx})])));
((capacities) : (((dom(capacities)) +-> (ran(capacities)))));
((flights) : (((dom(flights)) +-> (ran(flights)))));
(((tickets_status )(tt)) = ((1|->TICKET_STATUS)));
((tt) : (dom(ticket_to)));
((tt) : (dom(tickets_status)));
((((pp) |-> (tt))) : (has_ticket));
((tt) : (tickets));
((pp) : (passengers));
((tickets_status) : (((dom(tickets_status)) +-> (ran(tickets_status)))));
((pp) : (ran(ticket_to)));
((pp) : (dom(capacities)));
((((((((ticket_to)~) ; (tickets_status)) )[({pp})]) /\ (({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})))) = ({}));
((pp) : (dom(flights)));
not((((1|->TICKET_STATUS)) : (((((ticket_to)~) ; (tickets_status)) )[({pp})])));
(((((1|->TICKET_STATUS)) : (((((ticket_to)~) ; (tickets_status)) )[({pp})]))) or ((((2|->TICKET_STATUS)) : (((((ticket_to)~) ; (tickets_status)) )[({pp})]))));
(((flights )(pp)) : (ran(((({pp})) <<| (flights)))));
((((((((ticket_to)~ )[({pp})]) /\ (((tickets_status)~ )[({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})]))) \/ (((ticket_to)~ )[({xx})]))) : (FIN(((((((ticket_to)~ )[({pp})]) /\ (((tickets_status)~ )[({(1|->TICKET_STATUS)}\/{(2|->TICKET_STATUS)})]))) \/ (((ticket_to)~ )[({xx})])))));
((ticket_to) : (((dom(ticket_to)) +-> (ran(ticket_to)))));
((tt) : (ran(has_ticket)))
END
&
THEORY EnumerateX IS
TICKET_STATUS == {paid,checkin,board}
END
